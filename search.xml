<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于Hexo + Github搭建个人博客</title>
      <link href="/2022/03/18/%E5%9F%BA%E4%BA%8EHexo+Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(%E5%B0%8F%E7%99%BD%E6%95%99%E7%A8%8B)/"/>
      <url>/2022/03/18/%E5%9F%BA%E4%BA%8EHexo+Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA(%E5%B0%8F%E7%99%BD%E6%95%99%E7%A8%8B)/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Hexo-Github搭建免费的个人的博客——个人心得"><a href="#基于Hexo-Github搭建免费的个人的博客——个人心得" class="headerlink" title="基于Hexo + Github搭建免费的个人的博客——个人心得"></a>基于Hexo + Github搭建免费的个人的博客——个人心得</h1><hr><ul><li><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2></li></ul><p>​        虽然我们可以在网上找到很多个人博客的教程，但是对于我这种小白来说，即使是跟着B站up主的视频一步一步做也还是会出现很多的错误，这篇文章主要是针对于我在第一次搭建个人博客中所遇到的一些细节性的问题作出一个说明记录。</p><h4 id="注意：本文中所有代码后的-代表注释，复制的时候不要一起复制上去了。"><a href="#注意：本文中所有代码后的-代表注释，复制的时候不要一起复制上去了。" class="headerlink" title="注意：本文中所有代码后的  # 代表注释，复制的时候不要一起复制上去了。"></a>注意：本文中所有代码后的  # 代表注释，复制的时候不要一起复制上去了。</h4><ul><li><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>注册一个Github账号</p></li><li><p>下载 Nodejs、npm</p></li><li><p>下载 Git for windows （根据自己的系统而定下什么版本，本文是基于windows10）</p><p>以上工具的下载配置请自行上网查阅，本文就不一一介绍了。</p></li></ol></li><li><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><ol><li><p>在完成准备工作之后，我们打开cmd在里面先下载hexo包：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看是否安装好：</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><ol><li>我们可以先去自己的Github上创建好我们所要存放Blog的仓库。</li></ol></li><li><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><ol><li><p>在任意盘【最好是选择以后存放Blog的盘里】进入任意一个文件夹，右击进入 git bash here 输入：</p><pre class="line-numbers language-none"><code class="language-none">ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着输入：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;github注册邮箱【QQ邮箱】&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 紧接着是四次enter  【每次加载完成后敲一次，总共四次】</p><p>完成与 Github 连接的公钥私钥生成。</p></li></ol></li><li><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><ol><li><p>进入C盘user –&gt; Administrator 【我的是 用户 –&gt; dell】，找到刚刚生成的  .ssh  文件夹</p><p>进入后，打开  .pub  文件 【用记事本打开都行，主要是为了复制里面的公钥】</p><p>这里最好是直接  ctrl + A  –&gt;  ctrl + C【主要是害怕格式出错】</p></li></ol></li><li><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><ol><li>打开Github，点击右上角头像处Settings –&gt; 然后找到并点击左侧 SHH and GPG keys<br>接着在SHH keys 那栏右侧点击 NEW SHH key<br>Title 随便输入什么都可以<br>key 这一栏就将第四步复制的公钥复制进去，点击 Add SSH key 完成添加。</li></ol></li><li><h2 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h2><ol><li><p>在第三步的盘里面新建一个Blog文件夹；</p></li><li><p>进入里面右击选择 git bash here ，打开窗口：<br>这里第一次创建的时候要下载hexo包【虽然第一步的时候就下过 hexo 但是这里还是要再下一次，之后就不用了】<br>输入：</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回车后再输入：</p><pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面这一步是初始化一下 git</p><p>回车后继续输入：</p><pre class="line-numbers language-none"><code class="language-none">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回车，上面这一步是初始化hexo </p><p>然后再次输入：</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只有通过以上步骤后，才能将我们所需的博客的环境文件初始化到我们创建的 Blog 文件夹中。</p></li><li><p>窗口不用关，回到创建的 Blog 文件中如果上面的步骤没有出错的话，此时就会自动生成了很多文件，然后我们找到  _config.yml       文件,打开进入后，将最后两行删除：</p><p><img src="/images/1.png"></p><p>换成：</p><pre class="line-numbers language-none"><code class="language-none">deploy:    type: git    repository: https:&#x2F;&#x2F;github.com&#x2F;Cherish779&#x2F;Cherish779.github.io.git  #这个是自己github上的仓库地址    branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这个只要设置一次就行</p></li><li><p>启动服务【本地服务器，就是上传之前给自己在本地测试效果的】</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回车，会出现一个本地的网址，选中网址，右击 Open  ，切记不要  Ctrl + C ，因为这里代表终止本地服务器，当我们看完效果后，再去 Ctrl + C 终止。</p></li></ol></li><li><h2 id="第七步"><a href="#第七步" class="headerlink" title="第七步"></a>第七步</h2></li></ul><p>​            在进行最后远程连接之前，我建议最好是先去hexo官网：</p><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                先去选择自己喜欢的博客主题！！！不然要是先连接的话后期不好改，可以去b站这些地方去找主题，我先拿我的做个例子。</p><p>​            我用的是 Matery 主题，可以在上述官网链接里面搜索框搜想要的主题类型，找到喜欢的主题后，进入，【这些都是别人的博客，           别人模改过的，所以后期刚下下来肯定不如别人的好看，要自己动手去写代码改。】 </p><p>​                1、点击github的图标，进入他的 Github【这些主题都是开源在Github上的】</p><p>​                 注意：在所有有关Github的过程中，网卡、加载不出，都是正常的，因为是外网的东西，我们会很卡,所以一次加载不出就多加        载 几次，哈哈。</p><p>​                2、进入后，看见名字为 hexo-theme-XXX 的public的开源包 —&gt; 点击  进入后再点击绿色的Code下来列表 选择 Download ZIP        下载下来，然后解压到我们创建的Blog文件夹中的themes文件夹中，【注意：默认解压后的文件夹有两层文件夹，我们要移出来，        只留一层在themes文件夹中，然后复制文件夹名】</p><h3 id="这里我们开始细节部分了，注意："><a href="#这里我们开始细节部分了，注意：" class="headerlink" title="这里我们开始细节部分了，注意：!!!!!!!"></a>这里我们开始细节部分了，注意：!!!!!!!</h3><p>​                3、我们在 Blog 文件夹中找到   _config.yml  文件，点击进入，找到 language: en，将它改成中文的：  注意：在  .yml  文件中        修改任何东西都必须是<strong>英文状态</strong>，并且要在冒号后面敲一个<strong>空格</strong>，害怕出错的话建议直接复制下面的代码：</p><pre class="line-numbers language-none"><code class="language-none">language: zh-CN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                </p><p>​                然后继续找到  theme: XXX , 将冒号后面的删掉，换成我们前面复制的 hexo 的主题的文件夹名，这里代表着将默认主题替换成        我们想要的主题。</p><pre class="line-numbers language-none"><code class="language-none">theme: hexo-theme-matery-develop #这个就是将刚刚解压的文件夹名复制上来，只有这样才能使用这个主题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                最后记得  ctrl + S 保存文档</p><p>​                 4、接着是最重要的一步，网上都没有找到什么教程的办法：<br>​                        ~ 首先要在文件夹中打开显式所有隐藏文件<br>​                        ~ 然后找到  .git  文件夹 –&gt; 找到  config  文件，打开，最后面输入：</p><pre class="line-numbers language-none"><code class="language-none">[user]    #注意这个一定要顶格写email &#x3D; 765149691@qq.com  #自己注册github的邮箱name &#x3D; Cherish779  #github账号的名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​                然后，必须再继续在 Blog 文件夹里找 .deploy_git 文件夹，进入，找到隐藏的 .git 文件夹，一样也是找到 config 文件输入上述        的代码。都要记得 ctrl + s 保存！！！！！！！！！！</p><ul><li><h2 id="第八步"><a href="#第八步" class="headerlink" title="第八步"></a>第八步</h2></li></ul><h3 id="——-最关键的是与远程Github仓库连接："><a href="#——-最关键的是与远程Github仓库连接：" class="headerlink" title="—— 最关键的是与远程Github仓库连接："></a>—— 最关键的是与远程Github仓库连接：</h3><p>​                    1. 我们在自己创建好的 Blog 文件夹中右击选择  git bash here  进入 git 命令窗口：</p><p><img src="/images/2.png"></p><pre><code>                 首先来测试一下 SSH 是否绑定成功：</code></pre><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​            回车            </p><p>​                    2. 成功的话会像如下显示：名字是你的 github 账号名:</p><pre class="line-numbers language-none"><code class="language-none">Hi Cherish779! You&#39;ve successfully authenticated, but GitHub does not provide shell access.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                    3. 很重要！！！！！！！</p><p>​                        a. 初始化 git :</p><pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                        b. 添加 origin</p><pre class="line-numbers language-none"><code class="language-none">git remote add origin github仓库地址    #【github仓库地址】这个要去Github复制<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                        c. 查看是否已添加成功</p><pre class="line-numbers language-none"><code class="language-none">git remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                        d. 把 README.md 文件从 Github仓库 扒下来放到本地Bolg文件夹中</p><pre class="line-numbers language-none"><code class="language-none">git pull origin main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                         e. 反之，本地数据丢到远程</p><pre class="line-numbers language-none"><code class="language-none">git push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​                    4、最后一步：依次执行下面三步：【以后每次执行  git 也是这样依次三步】</p><pre class="line-numbers language-none"><code class="language-none">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/3.png"></p><p><img src="/images/4.png"></p><ul><li><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2></li></ul><h4 id="如果最后-hexo-d-成功了就代表上传到了github了这下就可以通过你的仓库名来在网页上进入你的博客了。"><a href="#如果最后-hexo-d-成功了就代表上传到了github了这下就可以通过你的仓库名来在网页上进入你的博客了。" class="headerlink" title="如果最后 hexo d 成功了就代表上传到了github了这下就可以通过你的仓库名来在网页上进入你的博客了。"></a>如果最后 hexo d 成功了就代表上传到了github了这下就可以通过你的仓库名来在网页上进入你的博客了。</h4><p>​                不过建议在执行  hexo d 之前要先去执行  hexo s 在本地测试一下，看看实际的效果，如果没有问题再 ctrl + C  后，去执行 hexo  d，上传到  Github 的远程仓库中。</p><ul><li><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li></ul><p>​            本文中只针对与后面 hexo 连接到 Github 上产生问题时的一些解决方案，对于怎么下载工具并没有去讲解，建议不会操作的小白去百度，或者去B站查找相关资料，另外当我们最后在利用 hexo d  连接上传本地文件至远程 Github 时，一定要有耐心，因为经常会因为连接超时等问题上传失败，这时候我们一定要多试几次，如果还是不行，建议关掉窗口，过会儿再试，当然这个方法只针对于和我一样想完全白嫖仓库的人，哈哈，以上就是我第一次接触并独立创建博客的一些经验，欢迎大家与我交流。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo + Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First</title>
      <link href="/2022/03/18/%E7%AE%80%E4%BB%8B/"/>
      <url>/2022/03/18/%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="这是我的第一篇博客"><a href="#这是我的第一篇博客" class="headerlink" title="这是我的第一篇博客"></a>这是我的第一篇博客</h2><img src="/images/2.jpg" alt="world" style="zoom:25%;"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
